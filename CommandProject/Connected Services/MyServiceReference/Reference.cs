//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CommandProject.MyServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/Server.Model")]
    [System.SerializableAttribute()]
    public partial class UserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BugHistoriesDTO", Namespace="http://schemas.datacontract.org/2004/07/Server.Model")]
    [System.SerializableAttribute()]
    public partial class BugHistoriesDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CommandProject.MyServiceReference.UserDTO UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CommandProject.MyServiceReference.UserDTO User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyServiceReference.IServerService", CallbackContract=typeof(CommandProject.MyServiceReference.IServerServiceCallback))]
    public interface IServerService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/Registration")]
        void Registration(string login, string password, string[] rolesName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/Registration")]
        System.Threading.Tasks.Task RegistrationAsync(string login, string password, string[] rolesName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/Auth", ReplyAction="http://tempuri.org/IServerService/AuthResponse")]
        CommandProject.MyServiceReference.UserDTO Auth(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/Auth", ReplyAction="http://tempuri.org/IServerService/AuthResponse")]
        System.Threading.Tasks.Task<CommandProject.MyServiceReference.UserDTO> AuthAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetUser", ReplyAction="http://tempuri.org/IServerService/GetUserResponse")]
        CommandProject.MyServiceReference.UserDTO GetUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetUser", ReplyAction="http://tempuri.org/IServerService/GetUserResponse")]
        System.Threading.Tasks.Task<CommandProject.MyServiceReference.UserDTO> GetUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetBugHistory", ReplyAction="http://tempuri.org/IServerService/GetBugHistoryResponse")]
        CommandProject.MyServiceReference.BugHistoriesDTO[] GetBugHistory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetBugHistory", ReplyAction="http://tempuri.org/IServerService/GetBugHistoryResponse")]
        System.Threading.Tasks.Task<CommandProject.MyServiceReference.BugHistoriesDTO[]> GetBugHistoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetBugHistoryToNameUser", ReplyAction="http://tempuri.org/IServerService/GetBugHistoryToNameUserResponse")]
        CommandProject.MyServiceReference.BugHistoriesDTO[] GetBugHistoryToNameUser(string nameUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetBugHistoryToNameUser", ReplyAction="http://tempuri.org/IServerService/GetBugHistoryToNameUserResponse")]
        System.Threading.Tasks.Task<CommandProject.MyServiceReference.BugHistoriesDTO[]> GetBugHistoryToNameUserAsync(string nameUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetBugHistoryToDecriptionBug", ReplyAction="http://tempuri.org/IServerService/GetBugHistoryToDecriptionBugResponse")]
        CommandProject.MyServiceReference.BugHistoriesDTO[] GetBugHistoryToDecriptionBug(string DescriptionBug);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetBugHistoryToDecriptionBug", ReplyAction="http://tempuri.org/IServerService/GetBugHistoryToDecriptionBugResponse")]
        System.Threading.Tasks.Task<CommandProject.MyServiceReference.BugHistoriesDTO[]> GetBugHistoryToDecriptionBugAsync(string DescriptionBug);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/EditStatusBugs")]
        void EditStatusBugs(string Login, string DescriptionBugHistory, string status);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/EditStatusBugs")]
        System.Threading.Tasks.Task EditStatusBugsAsync(string Login, string DescriptionBugHistory, string status);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/DropBug")]
        void DropBug(string DescriptionBug, string LoginUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/DropBug")]
        System.Threading.Tasks.Task DropBugAsync(string DescriptionBug, string LoginUser);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/AddBug")]
        void AddBug(string Login, string Decription, byte[][] ImgBytes);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/AddBug")]
        System.Threading.Tasks.Task AddBugAsync(string Login, string Decription, byte[][] ImgBytes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/Message")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommandProject.MyServiceReference.UserDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommandProject.MyServiceReference.BugHistoriesDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommandProject.MyServiceReference.BugHistoriesDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(byte[][]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(byte[]))]
        void Message([System.ServiceModel.MessageParameterAttribute(Name="message")] object message1, string descr);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerServiceChannel : CommandProject.MyServiceReference.IServerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerServiceClient : System.ServiceModel.DuplexClientBase<CommandProject.MyServiceReference.IServerService>, CommandProject.MyServiceReference.IServerService {
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Registration(string login, string password, string[] rolesName) {
            base.Channel.Registration(login, password, rolesName);
        }
        
        public System.Threading.Tasks.Task RegistrationAsync(string login, string password, string[] rolesName) {
            return base.Channel.RegistrationAsync(login, password, rolesName);
        }
        
        public CommandProject.MyServiceReference.UserDTO Auth(string login, string password) {
            return base.Channel.Auth(login, password);
        }
        
        public System.Threading.Tasks.Task<CommandProject.MyServiceReference.UserDTO> AuthAsync(string login, string password) {
            return base.Channel.AuthAsync(login, password);
        }
        
        public CommandProject.MyServiceReference.UserDTO GetUser(string login) {
            return base.Channel.GetUser(login);
        }
        
        public System.Threading.Tasks.Task<CommandProject.MyServiceReference.UserDTO> GetUserAsync(string login) {
            return base.Channel.GetUserAsync(login);
        }
        
        public CommandProject.MyServiceReference.BugHistoriesDTO[] GetBugHistory() {
            return base.Channel.GetBugHistory();
        }
        
        public System.Threading.Tasks.Task<CommandProject.MyServiceReference.BugHistoriesDTO[]> GetBugHistoryAsync() {
            return base.Channel.GetBugHistoryAsync();
        }
        
        public CommandProject.MyServiceReference.BugHistoriesDTO[] GetBugHistoryToNameUser(string nameUser) {
            return base.Channel.GetBugHistoryToNameUser(nameUser);
        }
        
        public System.Threading.Tasks.Task<CommandProject.MyServiceReference.BugHistoriesDTO[]> GetBugHistoryToNameUserAsync(string nameUser) {
            return base.Channel.GetBugHistoryToNameUserAsync(nameUser);
        }
        
        public CommandProject.MyServiceReference.BugHistoriesDTO[] GetBugHistoryToDecriptionBug(string DescriptionBug) {
            return base.Channel.GetBugHistoryToDecriptionBug(DescriptionBug);
        }
        
        public System.Threading.Tasks.Task<CommandProject.MyServiceReference.BugHistoriesDTO[]> GetBugHistoryToDecriptionBugAsync(string DescriptionBug) {
            return base.Channel.GetBugHistoryToDecriptionBugAsync(DescriptionBug);
        }
        
        public void EditStatusBugs(string Login, string DescriptionBugHistory, string status) {
            base.Channel.EditStatusBugs(Login, DescriptionBugHistory, status);
        }
        
        public System.Threading.Tasks.Task EditStatusBugsAsync(string Login, string DescriptionBugHistory, string status) {
            return base.Channel.EditStatusBugsAsync(Login, DescriptionBugHistory, status);
        }
        
        public void DropBug(string DescriptionBug, string LoginUser) {
            base.Channel.DropBug(DescriptionBug, LoginUser);
        }
        
        public System.Threading.Tasks.Task DropBugAsync(string DescriptionBug, string LoginUser) {
            return base.Channel.DropBugAsync(DescriptionBug, LoginUser);
        }
        
        public void AddBug(string Login, string Decription, byte[][] ImgBytes) {
            base.Channel.AddBug(Login, Decription, ImgBytes);
        }
        
        public System.Threading.Tasks.Task AddBugAsync(string Login, string Decription, byte[][] ImgBytes) {
            return base.Channel.AddBugAsync(Login, Decription, ImgBytes);
        }
    }
}
