//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CommandProject.MyServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ConsoleApp_DB")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CommandProject.MyServiceReference.Role[] RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CommandProject.MyServiceReference.Role[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/ConsoleApp_DB")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CommandProject.MyServiceReference.User[] UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CommandProject.MyServiceReference.User[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BugHistory", Namespace="http://schemas.datacontract.org/2004/07/ConsoleApp_DB")]
    [System.SerializableAttribute()]
    public partial class BugHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CommandProject.MyServiceReference.Bug BugField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BugIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CommandProject.MyServiceReference.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CommandProject.MyServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CommandProject.MyServiceReference.Bug Bug {
            get {
                return this.BugField;
            }
            set {
                if ((object.ReferenceEquals(this.BugField, value) != true)) {
                    this.BugField = value;
                    this.RaisePropertyChanged("Bug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BugId {
            get {
                return this.BugIdField;
            }
            set {
                if ((this.BugIdField.Equals(value) != true)) {
                    this.BugIdField = value;
                    this.RaisePropertyChanged("BugId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CommandProject.MyServiceReference.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CommandProject.MyServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bug", Namespace="http://schemas.datacontract.org/2004/07/ConsoleApp_DB")]
    [System.SerializableAttribute()]
    public partial class Bug : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CommandProject.MyServiceReference.Picture[] PicturesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CommandProject.MyServiceReference.Picture[] Pictures {
            get {
                return this.PicturesField;
            }
            set {
                if ((object.ReferenceEquals(this.PicturesField, value) != true)) {
                    this.PicturesField = value;
                    this.RaisePropertyChanged("Pictures");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/ConsoleApp_DB")]
    [System.SerializableAttribute()]
    public partial class Status : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Picture", Namespace="http://schemas.datacontract.org/2004/07/ConsoleApp_DB")]
    [System.SerializableAttribute()]
    public partial class Picture : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CommandProject.MyServiceReference.Bug BugField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BugIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CommandProject.MyServiceReference.Bug Bug {
            get {
                return this.BugField;
            }
            set {
                if ((object.ReferenceEquals(this.BugField, value) != true)) {
                    this.BugField = value;
                    this.RaisePropertyChanged("Bug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BugId {
            get {
                return this.BugIdField;
            }
            set {
                if ((this.BugIdField.Equals(value) != true)) {
                    this.BugIdField = value;
                    this.RaisePropertyChanged("BugId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyServiceReference.IServerService", CallbackContract=typeof(CommandProject.MyServiceReference.IServerServiceCallback))]
    public interface IServerService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/Registration")]
        void Registration(CommandProject.MyServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/Registration")]
        System.Threading.Tasks.Task RegistrationAsync(CommandProject.MyServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/Auth", ReplyAction="http://tempuri.org/IServerService/AuthResponse")]
        CommandProject.MyServiceReference.User Auth(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/Auth", ReplyAction="http://tempuri.org/IServerService/AuthResponse")]
        System.Threading.Tasks.Task<CommandProject.MyServiceReference.User> AuthAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetUser", ReplyAction="http://tempuri.org/IServerService/GetUserResponse")]
        CommandProject.MyServiceReference.User GetUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetUser", ReplyAction="http://tempuri.org/IServerService/GetUserResponse")]
        System.Threading.Tasks.Task<CommandProject.MyServiceReference.User> GetUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetBugHistory", ReplyAction="http://tempuri.org/IServerService/GetBugHistoryResponse")]
        CommandProject.MyServiceReference.BugHistory[] GetBugHistory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetBugHistory", ReplyAction="http://tempuri.org/IServerService/GetBugHistoryResponse")]
        System.Threading.Tasks.Task<CommandProject.MyServiceReference.BugHistory[]> GetBugHistoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetBugHistoryToNameUser", ReplyAction="http://tempuri.org/IServerService/GetBugHistoryToNameUserResponse")]
        CommandProject.MyServiceReference.BugHistory[] GetBugHistoryToNameUser(string nameUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetBugHistoryToNameUser", ReplyAction="http://tempuri.org/IServerService/GetBugHistoryToNameUserResponse")]
        System.Threading.Tasks.Task<CommandProject.MyServiceReference.BugHistory[]> GetBugHistoryToNameUserAsync(string nameUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetBugHistoryToDecriptionBug", ReplyAction="http://tempuri.org/IServerService/GetBugHistoryToDecriptionBugResponse")]
        CommandProject.MyServiceReference.BugHistory[] GetBugHistoryToDecriptionBug(string DescriptionBug);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetBugHistoryToDecriptionBug", ReplyAction="http://tempuri.org/IServerService/GetBugHistoryToDecriptionBugResponse")]
        System.Threading.Tasks.Task<CommandProject.MyServiceReference.BugHistory[]> GetBugHistoryToDecriptionBugAsync(string DescriptionBug);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/EditStatusBugs")]
        void EditStatusBugs(string DescriptionBugHistory, string status);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/EditStatusBugs")]
        System.Threading.Tasks.Task EditStatusBugsAsync(string DescriptionBugHistory, string status);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/DropBug")]
        void DropBug(string DescriptionBug, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/DropBug")]
        System.Threading.Tasks.Task DropBugAsync(string DescriptionBug, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/AddBug")]
        void AddBug(string login, string Decription, byte[][] ImgBytes);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/AddBug")]
        System.Threading.Tasks.Task AddBugAsync(string login, string Decription, byte[][] ImgBytes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerService/Message")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(byte[][]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(byte[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommandProject.MyServiceReference.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommandProject.MyServiceReference.Role[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommandProject.MyServiceReference.Role))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommandProject.MyServiceReference.User[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommandProject.MyServiceReference.BugHistory[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommandProject.MyServiceReference.BugHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommandProject.MyServiceReference.Bug))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommandProject.MyServiceReference.Picture[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommandProject.MyServiceReference.Picture))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommandProject.MyServiceReference.Status))]
        void Message([System.ServiceModel.MessageParameterAttribute(Name="message")] object message1, string descr);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerServiceChannel : CommandProject.MyServiceReference.IServerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerServiceClient : System.ServiceModel.DuplexClientBase<CommandProject.MyServiceReference.IServerService>, CommandProject.MyServiceReference.IServerService {
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Registration(CommandProject.MyServiceReference.User user) {
            base.Channel.Registration(user);
        }
        
        public System.Threading.Tasks.Task RegistrationAsync(CommandProject.MyServiceReference.User user) {
            return base.Channel.RegistrationAsync(user);
        }
        
        public CommandProject.MyServiceReference.User Auth(string login, string password) {
            return base.Channel.Auth(login, password);
        }
        
        public System.Threading.Tasks.Task<CommandProject.MyServiceReference.User> AuthAsync(string login, string password) {
            return base.Channel.AuthAsync(login, password);
        }
        
        public CommandProject.MyServiceReference.User GetUser(string login) {
            return base.Channel.GetUser(login);
        }
        
        public System.Threading.Tasks.Task<CommandProject.MyServiceReference.User> GetUserAsync(string login) {
            return base.Channel.GetUserAsync(login);
        }
        
        public CommandProject.MyServiceReference.BugHistory[] GetBugHistory() {
            return base.Channel.GetBugHistory();
        }
        
        public System.Threading.Tasks.Task<CommandProject.MyServiceReference.BugHistory[]> GetBugHistoryAsync() {
            return base.Channel.GetBugHistoryAsync();
        }
        
        public CommandProject.MyServiceReference.BugHistory[] GetBugHistoryToNameUser(string nameUser) {
            return base.Channel.GetBugHistoryToNameUser(nameUser);
        }
        
        public System.Threading.Tasks.Task<CommandProject.MyServiceReference.BugHistory[]> GetBugHistoryToNameUserAsync(string nameUser) {
            return base.Channel.GetBugHistoryToNameUserAsync(nameUser);
        }
        
        public CommandProject.MyServiceReference.BugHistory[] GetBugHistoryToDecriptionBug(string DescriptionBug) {
            return base.Channel.GetBugHistoryToDecriptionBug(DescriptionBug);
        }
        
        public System.Threading.Tasks.Task<CommandProject.MyServiceReference.BugHistory[]> GetBugHistoryToDecriptionBugAsync(string DescriptionBug) {
            return base.Channel.GetBugHistoryToDecriptionBugAsync(DescriptionBug);
        }
        
        public void EditStatusBugs(string DescriptionBugHistory, string status) {
            base.Channel.EditStatusBugs(DescriptionBugHistory, status);
        }
        
        public System.Threading.Tasks.Task EditStatusBugsAsync(string DescriptionBugHistory, string status) {
            return base.Channel.EditStatusBugsAsync(DescriptionBugHistory, status);
        }
        
        public void DropBug(string DescriptionBug, int UserId) {
            base.Channel.DropBug(DescriptionBug, UserId);
        }
        
        public System.Threading.Tasks.Task DropBugAsync(string DescriptionBug, int UserId) {
            return base.Channel.DropBugAsync(DescriptionBug, UserId);
        }
        
        public void AddBug(string login, string Decription, byte[][] ImgBytes) {
            base.Channel.AddBug(login, Decription, ImgBytes);
        }
        
        public System.Threading.Tasks.Task AddBugAsync(string login, string Decription, byte[][] ImgBytes) {
            return base.Channel.AddBugAsync(login, Decription, ImgBytes);
        }
    }
}
